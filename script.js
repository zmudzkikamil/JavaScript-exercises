// exercise 1
// Write a function that simply repeats the string a given number of times:
// repeatString('hey', 3) // returns 'heyheyhey'
// This function will take two arguments, string and num.
const repeatString = (str, num) => {
	let arrOfStr = []
	if (num < 0) return 'ERROR'
	for (let i = 0; i < num; i++) {
		arrOfStr.push(str)
	}
	return arrOfStr.join('')
}
repeatString('abc', -1)
describe('repeatString', () => {
	test('repeats the string', () => {
		expect(repeatString('hey', 3)).toEqual('heyheyhey')
	})
	test('repeats the string many times', () => {
		expect(repeatString('hey', 10)).toEqual('heyheyheyheyheyheyheyheyheyhey')
	})
	test('repeats the string 1 times', () => {
		expect(repeatString('hey', 1)).toEqual('hey')
	})
	test('repeats the string 0 times', () => {
		expect(repeatString('hey', 0)).toEqual('')
	})
	test('returns ERROR with negative numbers', () => {
		expect(repeatString('hey', -1)).toEqual('ERROR')
	})
	test('repeats the string a random amount of times', function () {
		/*The number is generated by using Math.random to get a value from between
      0 to 1, when this is multiplied by 1000 and rounded down with Math.floor it 
      equals a number between 0 to 999 (this number will change everytime you run
      the test).*/

		// DO NOT use Math.floor(Math.random() * 1000) in your code,
		// this test generates a random number, then passes it into your code with a function parameter.
		// If this doesn't make sense, you should go read about functions here: https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/fundamentals-part-3
		const number = Math.floor(Math.random() * 1000)
		/*The .match(/((hey))/g).length is a regex that will count the number of heys
      in the result, which if your function works correctly will equal the number that
      was randomly generated. */
		expect(repeatString('hey', number).match(/((hey))/g).length).toEqual(number)
	})
	test('works with blank strings', () => {
		expect(repeatString('', 10)).toEqual('')
	})
})
// exercise 2

// exercise 3

// exercise 4

// exercise 5

// exercise 6

// exercise 7

// exercise 8

// exercise 9

// exercise 10

// exercise 11

// exercise 12

// exercise 13

// exercise 14

// exercise 15

// exercise 16

// exercise 17

// exercise 18

// exercise 19

// exercise 20
